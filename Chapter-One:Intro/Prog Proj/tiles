Write an algorithm to create a tile pattern composed of black and white tiles, with a fringe of black tiles all around and two or three black tiles in the center, equally spaced from the boundary. The inputs to your algorithm are the total number of rows and columns in the pattern.
----------------------------------

public class TitlePattern {
	public static void main(String[] args){
		/* print black on the first and last columns and first and last rows
		to find the center, check for when the column is at the half (this only works for odd numbered columns). When iterating through the rows, check for when it is at half. If it is an even number of rows, print black at 'half' and it's previous position (it needs two tiles instead of three). Conversely, if it is odd, print three: front, half, and previous position.
		for int i = 0; i < columns; i ++ {
			if (i == 0 || i == columns.length - 1){
				print black;
			}else{
				print white;
			}
			for int r = 0; i < rows; i ++ {				
				if (r == rows.length / 2) {
					if (i == columns.length / 2){
						if(columns.length % == 0){
							print black;
							print black at the previous position
						}else{
							print black;
							print black ahead of position
							print black at previous position
						}
					}
				}
				if r == 0 ||  r == rows.length - 1 {
					print black;
				}else{
					print white;
				}
			}
		}
	}
}